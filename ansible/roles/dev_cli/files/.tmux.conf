setw -g mode-keys vi #vi mode
set -g default-shell $SHELL

#TODO test for macOS
set -g default-command "reattach-to-user-namespace -l ${SHELL}" #needed for pbpaste and pbcopy

# plugins
set -g @plugin 'tmux-plugins/tpm' #plugin manager

set -g default-terminal "xterm-256color-italic" #support color and italics
#set -g default-terminal "xterm-256color" <-- TODO set this for remote sessions

set-option -ga terminal-overrides ',xterm*:Tc:sitm=\E[3m'

set-option -g allow-rename off #???

# set scrollback history to 30000 (30k)
set -g history-limit 30000

# <C-a> prefix key is easier to hit
# Remember to remap capslock to <C> when held (<Esc> otherwise)
set -g prefix C-a
unbind C-b # and unbind C-b to free it up

# Shorten escape delay
set -sg escape-time 1

# Set window and pane index to 1 (0 by default)
set-option -g base-index 1
setw -g pane-base-index 1

# Reload ~/.tmux.conf using <PREFIX> r
bind r source-file ~/.tmux.conf \; display "Tmux Reloaded!"

# Use window splits that make sense
bind | split-window -h
bind - split-window -v

# Custom binds
# Make the current window the first window
bind T swap-window -t 1

# Map Vi movement keys as pane movement keys
# Add support for moving between Vi panes and Tmux panes naturally
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"
bind -n C-\\ run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys 'C-\\') || tmux select-pane -l"
#Users/scott/.tmux.conf:49: unknown key: C- run

# resize panes using META h, j, k, l (SHIFT moves by 5)
bind -n M-H resize-pane -L 5
bind -n M-J resize-pane -D 5
bind -n M-K resize-pane -U 5
bind -n M-L resize-pane -R 5
bind -n M-h resize-pane -L
bind -n M-j resize-pane -D
bind -n M-k resize-pane -U
bind -n M-l resize-pane -R

# C-i for even-vertical arrangement and C-o to zoom current pane
bind-key C-i select-layout even-vertical
bind-key C-v select-layout even-horizontal
bind-key C-o resize-pane -y 1000

# Shift arrow to switch windows
bind -n S-Left  previous-window
bind -n S-Right next-window

# Sync panes
bind C-s set-window-option synchronize-panes

# don't need these binds
unbind -T copy-mode-vi Up
unbind -T copy-mode-vi Down
unbind -T copy-mode-vi NPage
unbind -T copy-mode-vi PPage
unbind -T copy-mode-vi C-Up
unbind -T copy-mode-vi C-Down
unbind -T copy-mode-vi Left
unbind -T copy-mode-vi Right
unbind -T copy-mode-vi C-h
unbind -T copy-mode-vi C-l
unbind -T copy-mode-vi C-j
unbind -T copy-mode-vi C-c

#unbind all copy-mode keys since we use copy-mode-vi
unbind -T copy-mode -a

#get rid of (most) default arrow key binds
unbind M-Up
unbind M-Down
unbind M-Left
unbind M-Right
unbind C-Up
unbind C-Down
unbind C-Left
unbind C-Right

# explicitly disable mouse control
# setw -g mode-mouse off
# set -g mouse-select-pane off
# set -g mouse-resize-pane off
# set -g mouse-select-window off

# mouse control for tmux v2.1
set -g mouse on

# ----------------------
# set some pretty colors
# ----------------------
set -g pane-border-style bg=colour233,fg="#444758"
set -g pane-active-border-style bg=colour233,fg="#444758"

# set color default for status bar
set-option -g status-style bg="#444758",fg=white,dim

#set inactive/active window styles
set -g window-style fg=colour247,bg=colour233
set -g window-active-style fg=white,bg=black

# colorize messages in the command line
set-option -g message-style fg=white,bg="#444758"

# dont use these
set-window-option -g window-status-activity-style ''
set-window-option -g window-status-bell-style ''

# ----------------------
# Status Bar
# -----------------------
set-option -g status-position top
set-option -g status off               # off by default and turned on by session options
set -g status-interval 1               # set update frequencey (default 15 seconds)
set -g status-justify left             # lefthand window list

# visual notification of activity in other windows
setw -g monitor-activity on #shows a * by windows with activity NOT USED?
set -g visual-activity off #no message alerts for activity


setw -g window-status-style fg=white
setw -g window-status-current-style fg='#be94f2',bold
setw -g window-status-format " #W#(num2sup #I) "
setw -g window-status-current-format '[#W#(num2sup #I)]'
setw -g window-status-separator ""
#  ⧉
set -g status-left "#[fg=colour240,bg=colour248]#{?window_zoomed_flag,, }#[bg=default,fg=colour248]#[reset] " #whitespace before window list
#SHOW -> select-pane -t 1; resize-pane -Z; select-pane -t 2
set -g status-right-length 160
set -g status-right '#(echo "-t #{pane_tty} -w #{window_width} -k #{key-table} #{?pane_in_mode, -c,}#{?client_prefix, -p,}#{?@utc_mode, -u,}" | socat - UNIX-CONNECT:/tmp/tmuxstatus-ipc-`id -u`) '

bind -n M-z \
  select-pane -t 1 \;\
  resize-pane -Z \;\
  run "tmux select-pane -t #{?window_zoomed_flag,1,2}"

# a bind to switch between UTC and local timezone (helpful when viewing server logs)
set -g @utc_mode 0
bind Z \
  run-shell 'tmux set -g @utc_mode `tmux display -p "#{?@utc_mode,0,1}"`' \;\
  refresh-client -S

#! moves pane to its own window
## list buffers (show copy buffers)
#% default to split-h
#" default to splut-h
#: cmd prompt
#; last pane
#= choose bufffer (paste)
#? list keys
#I install plugins
#U update plugins
#Z toggle utc/local timezone
#[ copy code
#] paste buffer
#i status
#m? select-pane -m
#q show pane numbers
#r reload•
#w/s choose-tree -Zs ??
#t clock mode
#~ show messages

#COPY MODE VI

# bind-key    -T copy-mode-vi C-b               send-keys -X page-up
# bind-key    -T copy-mode-vi C-c               send-keys -X cancel
# bind-key    -T copy-mode-vi C-d               send-keys -X halfpage-down
# bind-key    -T copy-mode-vi C-e               send-keys -X scroll-down
# bind-key    -T copy-mode-vi C-f               send-keys -X page-down
# bind-key    -T copy-mode-vi C-h               send-keys -X cursor-left
# bind-key    -T copy-mode-vi C-j               send-keys -X copy-selection-and-cancel
# bind-key    -T copy-mode-vi Enter             send-keys -X copy-selection-and-cancel
# bind-key    -T copy-mode-vi C-u               send-keys -X halfpage-up
# bind-key    -T copy-mode-vi C-v               send-keys -X rectangle-toggle
# bind-key    -T copy-mode-vi C-y               send-keys -X scroll-up
# bind-key    -T copy-mode-vi Escape            send-keys -X clear-selection
# bind-key    -T copy-mode-vi Space             send-keys -X begin-selection
# bind-key    -T copy-mode-vi $                 send-keys -X end-of-line
# bind-key    -T copy-mode-vi ,                 send-keys -X jump-reverse
# bind-key    -T copy-mode-vi /                 command-prompt -p "(search down)" "send -X search-forward \"%%%\""
# bind-key    -T copy-mode-vi 0                 send-keys -X start-of-line
# bind-key    -T copy-mode-vi 1                 command-prompt -N -I 1 -p (repeat) "send -N \"%%%\""
# bind-key    -T copy-mode-vi 2                 command-prompt -N -I 2 -p (repeat) "send -N \"%%%\""
# bind-key    -T copy-mode-vi 3                 command-prompt -N -I 3 -p (repeat) "send -N \"%%%\""
# bind-key    -T copy-mode-vi 4                 command-prompt -N -I 4 -p (repeat) "send -N \"%%%\""
# bind-key    -T copy-mode-vi 5                 command-prompt -N -I 5 -p (repeat) "send -N \"%%%\""
# bind-key    -T copy-mode-vi 6                 command-prompt -N -I 6 -p (repeat) "send -N \"%%%\""
# bind-key    -T copy-mode-vi 7                 command-prompt -N -I 7 -p (repeat) "send -N \"%%%\""
# bind-key    -T copy-mode-vi 8                 command-prompt -N -I 8 -p (repeat) "send -N \"%%%\""
# bind-key    -T copy-mode-vi 9                 command-prompt -N -I 9 -p (repeat) "send -N \"%%%\""
# bind-key    -T copy-mode-vi :                 command-prompt -p "(goto line)" "send -X goto-line \"%%%\""
# bind-key    -T copy-mode-vi ;                 send-keys -X jump-again
# bind-key    -T copy-mode-vi ?                 command-prompt -p "(search up)" "send -X search-backward \"%%%\""
# bind-key    -T copy-mode-vi A                 send-keys -X append-selection-and-cancel
# bind-key    -T copy-mode-vi B                 send-keys -X previous-space
# bind-key    -T copy-mode-vi D                 send-keys -X copy-end-of-line
# bind-key    -T copy-mode-vi E                 send-keys -X next-space-end
# bind-key    -T copy-mode-vi F                 command-prompt -1 -p "(jump backward)" "send -X jump-backward \"%%%\""
# bind-key    -T copy-mode-vi G                 send-keys -X history-bottom
# bind-key    -T copy-mode-vi H                 send-keys -X top-line
# bind-key    -T copy-mode-vi J                 send-keys -X scroll-down
# bind-key    -T copy-mode-vi K                 send-keys -X scroll-up
# bind-key    -T copy-mode-vi L                 send-keys -X bottom-line
# bind-key    -T copy-mode-vi M                 send-keys -X middle-line
# bind-key    -T copy-mode-vi N                 send-keys -X search-reverse
# bind-key    -T copy-mode-vi T                 command-prompt -1 -p "(jump to backward)" "send -X jump-to-backward \"%%%\""
# bind-key    -T copy-mode-vi V                 send-keys -X select-line
# bind-key    -T copy-mode-vi W                 send-keys -X next-space
# bind-key    -T copy-mode-vi ^                 send-keys -X back-to-indentation
# bind-key    -T copy-mode-vi b                 send-keys -X previous-word
# bind-key    -T copy-mode-vi e                 send-keys -X next-word-end
# bind-key    -T copy-mode-vi f                 command-prompt -1 -p "(jump forward)" "send -X jump-forward \"%%%\""
# bind-key    -T copy-mode-vi g                 send-keys -X history-top
# bind-key    -T copy-mode-vi h                 send-keys -X cursor-left
# bind-key    -T copy-mode-vi j                 send-keys -X cursor-down
# bind-key    -T copy-mode-vi k                 send-keys -X cursor-up
# bind-key    -T copy-mode-vi l                 send-keys -X cursor-right
# bind-key    -T copy-mode-vi n                 send-keys -X search-again
# bind-key    -T copy-mode-vi o                 send-keys -X other-end
# bind-key    -T copy-mode-vi q                 send-keys -X cancel
# bind-key    -T copy-mode-vi t                 command-prompt -1 -p "(jump to forward)" "send -X jump-to-forward \"%%%\""
# bind-key    -T copy-mode-vi v                 send-keys -X rectangle-toggle
# bind-key    -T copy-mode-vi w                 send-keys -X next-word
# bind-key    -T copy-mode-vi {                 send-keys -X previous-paragraph
# bind-key    -T copy-mode-vi }                 send-keys -X next-paragraph
# bind-key    -T copy-mode-vi MouseDown1Pane    select-pane
# bind-key    -T copy-mode-vi MouseDrag1Pane    select-pane ; send-keys -X begin-selection
# bind-key    -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-selection-and-cancel
# bind-key    -T copy-mode-vi WheelUpPane       select-pane ; send-keys -X -N 5 scroll-up
# bind-key    -T copy-mode-vi WheelDownPane     select-pane ; send-keys -X -N 5 scroll-down
# bind-key    -T copy-mode-vi DoubleClick1Pane  select-pane ; send-keys -X select-word
# bind-key    -T copy-mode-vi TripleClick1Pane  select-pane ; send-keys -X select-line
# bind-key    -T copy-mode-vi BSpace            send-keys -X cursor-left
# bind-key    -T copy-mode-vi NPage             send-keys -X page-down
# bind-key    -T copy-mode-vi PPage             send-keys -X page-up
# bind-key    -T copy-mode-vi Up                send-keys -X cursor-up
# bind-key    -T copy-mode-vi Down              send-keys -X cursor-down
# bind-key    -T copy-mode-vi Left              send-keys -X cursor-left
# bind-key    -T copy-mode-vi Right             send-keys -X cursor-right
# bind-key    -T copy-mode-vi C-Up              send-keys -X scroll-up
# bind-key    -T copy-mode-vi C-Down            send-keys -X scroll-down



#these will need to be different in off mode or it won't work on remote
#not sure yet how to do it
#maybe send keycodes?
#to know if this works need to get SSH going
bind -T off c-l send-keys Right
#better would be to use unbind but that means duplication


#Command+arrows not moving windows?

bind -T root F12 \
  set prefix None \;\
  set key-table off \;\
  if -F '#{pane_in_mode}' 'send-keys -X cancel' \;\
  run-shell 'tmux set -g @save_win_f `tmux display -p "#{window-status-style}"`' \;\
  run-shell 'tmux set -g @save_win_c_f `tmux display -p "#{window-status-current-style}"`' \;\
  setw -g window-status-style fg=colour242 \;\
  setw -g window-status-current-style fg=white,bright \;\
  refresh-client -S

bind -T off F12 \
  set -u prefix \;\
  set -u key-table \;\
  run-shell 'tmux setw -g window-status-style `tmux display -p "#{@save_win_f}"`' \;\
  run-shell 'tmux setw -g window-status-current-style `tmux display -p "#{@save_win_c_f}"`' \;\
  refresh-client -S

if-shell 'test -n "$SSH_CLIENT"' \
   'source-file $XDG_CONFIG_HOME/tmux/tmux.remote.conf'

# install plugin manager if needed
if "test ! -d ~/.tmux/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm'"

set-option -g update-environment "ITERM_PROFILE \
                                  TERM_PROGRAM"

if '[[ "$TERM_PROGRAM" !~ vscode ]]' \
   'set -t dev -g status on'

if '[[ "$ITERM_PROFILE" =~ Quake ]]' \
   'source-file $XDG_CONFIG_HOME/tmux/quake.conf'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
#TERM_PROGRAM=vscode
#ITERM_PROFILE=Quake
